#!/usr/bin/env bash

set -o errexit
set -o pipefail
set -o nounset

source /etc/lsb-release

set -o errexit

if [[ $DISTRIB_ID != "Ubuntu" || $DISTRIB_RELEASE != "20.04" ]]; then
  echo "target: Ubuntu 20.04"
  exit 1
fi

if [[ $(id -u) == 0 ]]; then
  sudo=""
else
  sudo="sudo"
fi

$sudo apt-get update

if ! command -v whiptail &>/dev/null; then
  $sudo apt-get install -qy "whiptail"
fi

packages_base=(
  "apt-transport-https"
  "apt-utils"
  "asciinema"
  "bash"
  "bash-completion"
  "ca-certificates"
  "cryptsetup"
  "curl"
  "ddgr"
  "debconf-utils"
  "detox"
  "fuse-overlayfs"
  "gnupg"
  "hexyl"
  "htop"
  "iftop"
  "jq"
  "libarchive-tools"
  "lsb-release"
  "lynx"
  "man"
  "mosquitto-clients"
  "nano"
  "neofetch"
  "net-tools"
  "netcat"
  "nmap"
  "openssl"
  "openvpn"
  "ppa-purge"
  "ripgrep"
  "rsync"
  "screen"
  "screenfetch"
  "software-properties-common"
  "software-properties-gtk"
  "telnet"
  "tldr"
  "tmux"
  "tree"
  "vim"
  "vim-doc"
  "vim-editorconfig"
  "vim-syntax-docker"
  "wget"
  "whiptail"
  "wireguard"
)

packages_dev=(
  "automake"
  "build-essential"
  "clang"
  "clang-format"
  "cmake"
  "g++"
  "gcc"
  "git"
  "git-lfs"
  "libgl1-mesa-dev"
  "libgtk-3-dev"
  "liblzma-dev"
  "make"
  "manpages-dev"
  "manpages-posix"
  "manpages-posix-dev"
  "mercurial"
  "musl"
  "musl-dev"
  "musl-tools"
  "ninja-build"
  "pkg-config"
  "python-is-python3"
  "python3-pip"
  "python3-setuptools"
  "python3-venv"
  "python3-wheel"
  "scdoc"
  "shellcheck"
  "subversion"
  "xorg-dev"
  "xxd"
)

packages_desktop=(
  "cheese"
  "fonts-font-awesome"
  "geany"
  "gigolo"
  "gimp"
  "gimp-data-extras"
  "gnuplot"
  "gparted"
  "graphviz"
  "gsmartcontrol"
  "intel-gpu-tools"
  "keepassxc"
  "kitty"
  "network-manager-openvpn"
  "network-manager-openvpn-gnome"
  "nextcloud-desktop"
  "notify-osd"
  "pandoc"
  "qdirstat"
  "scrot"
  "simplescreenrecorder"
  "slop"
  "soundconverter"
  "speedcrunch"
  "sqlitebrowser"
  "suckless-tools"
  "texlive"
  "texlive-bibtex-extra"
  "texlive-extra-utils"
  "texlive-full"
  "texlive-lang-english"
  "texlive-lang-german"
  "texlive-latex-extra"
  "texlive-pictures"
  "texlive-science"
  "texlive-xetex"
  "virtualbox"
  "vlc"
  "weechat"
  "xautomation"
  "xclip"
  "xdotool"
  "xournal"
)

packages_xfce4=(
  "xfce4-goodies"
  "xfce4-timer-plugin"
)

packages_fun=(
  "cmatrix"
  "lutris"
  "newsboat"
  "streamlink"
)

categories=$(whiptail --title "package sets" --checklist --noitem "package sets to be installed: " 20 40 10 "base" "" "dev" "" "desktop" "" "fun" "" "xfce4" "" 3>&1 1>&2 2>&3)

packages=()
if [[ $categories == *"base"* ]]; then
  packages+=("${packages_base[@]}")
fi
if [[ $categories == *"dev"* ]]; then
  packages+=("${packages_dev[@]}")
fi
if [[ $categories == *"desktop"* ]]; then
  packages+=("${packages_desktop[@]}")
fi
if [[ $categories == *"fun"* ]]; then
  packages+=("${packages_fun[@]}")
fi
if [[ $categories == *"xfce4"* ]]; then
  packages+=("${packages_xfce4[@]}")
fi
readarray -t packages < <(printf '%s\n' "${packages[@]}" | sort -u)

if ! whiptail --title "confirm" --yesno --defaultno "selected packages:\n\n${packages[*]}\n\ncontinue?" 30 80; then
  echo "aborting"
  exit 0
fi

$sudo apt-get install -qy "${packages[@]}"

if whiptail --title "autoupdate" --yesno --defaultno "enable unattended upgrades?" 20 80; then
  $sudo apt-get install -qy unattended-upgrades
fi

$sudo apt-get clean
$sudo apt-get autoremove
